
#----------------------------------------------
#-- 基本配置 --#
#set -g default-terminal "screen"
#提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set -g display-time 5000
set -g history-limit 65535
#默认从1开始
set -g base-index 1
set -g pane-base-index 1
set -g default-terminal "screen-256color"

#----------------------------------------------


#----------------------------------------------
#将默认按键前缀改为与Ctrl-a避免与终端快捷键冲突
#set-option -g prefix C-a
#unbind-key C-b
#bind-key C-a send-prefix
#----------------------------------------------




#------------------------------------------------------------------------------------------------------------------------------------------
#按键绑定
#水平或垂直分割窗口 (C+A+ :split-window + v/h)
unbind '"'
bind < splitw -v #分割成上下两个窗口
unbind %
bind > splitw -h #分割成左右两个窗口
#----------------------------------------------

#选择分割的窗格  这里和vi一样
bind k selectp -U #选择上窗格
bind j selectp -D #选择下窗格
bind h selectp -L #选择左窗格
bind l selectp -R #选择右窗格
#----------------------------------------------

#重新调整窗格的大小
bind ^k resizep -U 5 # 跟选择窗格的设置相同，只是多加 Ctrl（Ctrl-k）
bind ^j resizep -D 5 # 同上
bind ^h resizep -L 5 # ...
bind ^l resizep -R 5 # ...
#----------------------------------------------

#交换两个窗格
#bind ^u swapp -U # 与上窗格交换 Ctrl-u
#bind ^d swapp -D # 与下窗格交换 Ctrl-d
#----------------------------------------------

#bind '~' splitw htop
#bind ! splitw ncmpcpp
#bind m command-prompt "splitw -h 'exec man %%'"

#unbind s
#----------------------------------------------





#----------------------------------------------
#定制状态行
#set -g status-left "#[fg=white,bg=blue] > #I < #[default] |" # 0:bash
set -g status-left "#[fg=white,bg=blue] > #P < #[default] |" # 0:bash
#set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-right "#[fg=yellow,bright][ #[fg=cyan]#W #[fg=yellow]]#[default] #[fg=yellow,bright]- %Y.%m.%d #[fg=green]%H:%M #[default]"
set -g status-right-attr bright

set -g status-bg black
set -g status-fg white


setw -g window-status-current-attr bright
setw -g window-status-current-bg green
setw -g window-status-current-fg white

set -g set-clipboard on

set -g status-utf8 on                #开启状态栏的UTF-8支持
set-window-option -g utf8 on         #开启窗口的UTF-8支持

set -g status-interval 1

#开启window事件提示
#set -g visual-activity on
#setw -g monitor-activity on

set -g status-keys vi
#set-option -g mouse-select-pane on
#set-window-option -g mode-mouse on
#----------------------------------------------





#----------------------------------------------
setw -g mode-keys vi
#setw -g mode-mouse on

#setw -g mouse-resize-pane on
#setw -g mouse-select-pane on
#setw -g mouse-select-window on

# move x clipboard into tmux paste buffer
#bind C-p run "tmux set-buffer \"$(xclip -o -sel clipbaord)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
#bind C-y run "tmux show-buffer | xclip -i -sel clipbaord"


#----------------------------------------------
#默认启动应用
#new -s work # 新建名为 work 的会话，并启动 mutt
#neww rtorrent # 启动 rtorrent
#neww vim # 启动 vim
#neww zsh
#selectw -t 3 # 默认选择标号为 3 的窗口
